title: Write a Learning Lab course
tagline: Write a Learning Lab course
description: Write a Learning Lab course
template:
  name: lab-starter
  repo: write-a-ll-course-template
before:
  - type: createIssue
    title: Welcome
    body: 00.0_welcome.md
    comments:
      - welcome-2.md
  - type: updateBranchProtection

# Repo artifacts:
# 1. PR: Add a course title and description
# 2. PR: Setup the learner's repo
# 3. PR: Write the course steps
# 4. Issue: Publish your course

steps:

# 1
- title: Welcome
  description: Decide whether to complete a guided course, or use boilerplate as is.
  event: issues.closed
  link: '{{ repoUrl }}/issues/1'
  actions:
  - type: gate
    left: '%payload.issue.assignee%'
    else:
    - type: createPullRequest
      title: Add a course title and description
      body: 01.0_add-title.md
      head: title
      action_id: metaPR
    - type: assignRegistrant
      issue: '%actions.metaPR.data.number%'
    - type: octokit
      method: pullRequests.createComment
      owner: '%actions.metaPR.data.head.repo.owner.login%'
      repo: '%actions.metaPR.data.head.repo.name%'
      number: '%actions.metaPR.data.number%'
      commit_id: '%actions.metaPR.data.head.sha%'
      path: config.yml
      body: |
        ```suggestion
        title: My amazing course
        ```
      position: 6
    - type: respond
      with: goto-first-pr.md
      data:
        url: '%actions.metaPR.data.html_url%'
  - type: createIssue
    title: Transfer your course
    body: 14.0_congratulations.md
    action_id: transferIssue
  - type: respond
    with: goto-transfer.md
    data:
      url: '%actions.transferIssue.data.html_url%'

# 1
- title: Give your course a title
  description: Name your course so learners can find it.
  event: pull_request.synchronize
  link: '{{ repoUrl }}/pull/1'
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^title: *\w(?![ \t]*#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 02.1_e-no-title.md
  - type: respond
    with: 11.0_add-descriptions.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
      tagline: Learn how to open a PR
      ```
    position: 7
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
      description: Go from 0 to PR 1 in less than 10 minutes with this course.
      ```
    position: 8

# 2
- title: Add some descriptions to your course
  description: Give your course a description and tagline so learners can identify it.
  link: '{{ repoUrl }}/pull/1'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^tagline:(?![ \t]*#).*$\ndescription:(?![ \t]*#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 12.1_e-no-meta.md
  - type: requestReviewFromRegistrant
  - type: respond
    with: approve-first-pr.md

# 3
- title: Approve the course metadata
  description: Approve the pull request containing the course's metadata.
  link: '{{ repoUrl }}/pull/1'
  event: pull_request_review.submitted
  actions:
  - type: gate
    left: '%payload.review.state%'
    operator: ===
    right: approved
  - type: mergePullRequest
  - type: createPullRequest
    title: Setup the learner's repo
    body: 02.0_add-template.md
    head: repo-setup
    action_id: repoPR
  - type: respond
    with: goto-template-pr.md
    data:
      url: '%actions.repoPR.data.html_url%'
  - type: assignRegistrant
    issue: '%actions.repoPR.data.number%'
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.repoPR.data.head.repo.owner.login%'
    repo: '%actions.repoPR.data.head.repo.name%'
    number: '%actions.repoPR.data.number%'
    commit_id: '%actions.repoPR.data.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        repo: lab-starter-template
      ```
    position: 7

# 4
- title: Point to the template repo
  description: Designate a template repository from which to clone.
  link: '{{ repoUrl }}/pull/2'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}repo: *lab-starter-template(?!#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 03.1_e-no-repo.md
  - type: respond
    with: 03.0_add-repo-name.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        name: my-sparkles-repo
      ```
    position: 6

# 5
- title: Give the learner's repo a name
  description: Designate a name for the repository when it is created for the learner.
  link: '{{ repoUrl }}/pull/2'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}name: *\w(?![ \t]*#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 04.1_e-no-name.md
  - type: requestReviewFromRegistrant
  - type: respond
    with: approve-second-pr.md

# 6
- title: Approve the repo setup
  description: Approve the template repo information
  link: '{{ repoUrl }}/pull/2'
  event: pull_request_review.submitted
  actions:
  - type: gate
    left: '%payload.review.state%'
    operator: ===
    right: approved
  - type: mergePullRequest
  - type: createPullRequest
    title: Write the course steps
    body: 04.0_create-issue.md
    head: write-steps
    action_id: stepsPR
  - type: respond
    with: goto-steps-pr.md
    data:
      url: '%actions.stepsPR.data.html_url%'
  - type: assignRegistrant
    issue: '%actions.stepsPR.data.number%'
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.stepsPR.data.head.repo.owner.login%'
    repo: '%actions.stepsPR.data.head.repo.name%'
    number: '%actions.stepsPR.data.number%'
    commit_id: '%actions.stepsPR.data.head.sha%'
    path: config.yml
    body: |
      ```suggestion
      - type: createIssue
      ```
    position: 7
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.stepsPR.data.head.repo.owner.login%'
    repo: '%actions.stepsPR.data.head.repo.name%'
    number: '%actions.stepsPR.data.number%'
    commit_id: '%actions.stepsPR.data.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        title: Welcome
      ```
    position: 8
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.stepsPR.data.head.repo.owner.login%'
    repo: '%actions.stepsPR.data.head.repo.name%'
    number: '%actions.stepsPR.data.number%'
    commit_id: '%actions.stepsPR.data.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        body: welcome-text.md
      ```
    position: 9

# 7
- title: Create an issue using Learning Lab
  description: Use the `before` block to create an issue in the learner's repo.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^- type: *createIssue(?!#).*$\n  title: *(?![ \t]*#).*$\n. body: *welcome-text.md(?!#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 05.1_e-no-new-issue.md
  - type: respond
    with: 05.0_add-response.md
    data:
      fileUrl: '%payload.repository.html_url%/new/%payload.pull_request.head.ref%/responses?filename=responses/welcome-text.md'

# 8
- title: Create your first response
  description: Add content to the repo's first issue.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getTree
    action_id: tree
    recursive: true
    sha: '%payload.pull_request.head.sha%'
  - type: gate
    left: '%actions.tree.data.tree%'
    operator: includes
    right: path:responses/welcome-text.md
    else:
      type: respond
      with: 06.1_e-no-response.md
  - type: getFileContents
    action_id: fileContents
    filename: 'responses/welcome-text.md'
  - type: gate
    left: '/\w+/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 06.1_e-no-response.md
  - type: respond
    with: 06.0_add-first-step.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
      - title: Create a new PR
      ```
    position: 19
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        description: Add your name to the README.md file in your new PR
      ```
    position: 20

# 9
- title: Name your first step and give it a description
  description: Identify the first step so the learner knows what's expected.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}description:(?![ \t]*#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 07.1_e-no-step-title.md
  - type: respond
    with: 07.0_add-trigger.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        event: pull_request.opened
      ```
    position: 21

# 10
- title: Trigger your first step with a GitHub event
  description: Add a pull_request.opened event.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}event: *pull_request.opened(?!#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 08.1_e-no-event.md
  - type: respond
    with: 08.0_validate.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        - type: gate
      ```
    position: 32

# 11
- title: Validate a learner's PR
  description: Add a gate to determine if the learner took the expected action.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}- type: *gate(?!#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 09.1_e-no-gate.md
  - type: respond
    with: 09.0_add-context.md
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
          left: '\%payload.pull_request.title\%'
      ```
    position: 33
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
          operator: ===
      ```
    position: 34
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
          right: Add name to README
      ```
    position: 35

# 12
- title: Use contextual information to validate
  description: Add options to the gate action.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  # - type: gate
  #   left: '/^\s{4}left: *'\%payload.pull_request.title\%'(?!#).*$\n\s{4}operator: *===(?!#).*$\n\s{4}right: *Add name to README(?!#).*$/gm'
  #   operator: test
  #   right: '%actions.fileContents%'
  #   else:
  #   - type: respond
  #     with: 10.1_e-no-gate-options.md
  - type: respond
    with: 10.0_respond-success.md
    data:
      fileUrl: '%payload.repository.html_url%/new/%payload.pull_request.head.ref%/?filename=README.md'
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
        - type: respond
      ```
    position: 36
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.number%'
    commit_id: '%payload.pull_request.head.sha%'
    path: config.yml
    body: |
      ```suggestion
          with: pr-opened.md
      ```
    position: 37

# 13
- title: Respond to a learner's successful PR
  description: Use a respond action when a learner opens their pull request.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'config.yml'
  - type: gate
    left: '/^\s{2}- type: *respond(?!#).*$\n    with: *pr-opened.md(?!#).*$/gm'
    operator: test
    right: '%actions.fileContents%'
    else:
    - type: respond
      with: 11.1_e-no-respond-action.md
  - type: respond
    with: 12.0_add-readme.md
    data:
      fileUrl: '%payload.repository.html_url%/new/%payload.pull_request.head.ref%?filename=README.md'

# 14
- title: Add a README to your course
  description: Write a longform description for your course.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:
  - type: getTree
    action_id: tree
    recursive: true
    sha: '%payload.pull_request.head.sha%'
  - type: gate
    left: '%actions.tree.data.tree%'
    operator: includes
    right: path:README.md
    else:
      type: respond
      with: 13.1_e-no-readme.md
  - type: requestReviewFromRegistrant
  - type: respond
    with: 13.0_publish.md

# 15
- title: Approve the steps
  description: Submit an approval for the steps pull request.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request_review.submitted
  actions:
  - type: gate
    left: '%payload.review.state%'
    operator: ===
    right: approved
  - type: mergePullRequest
  - type: createIssue
    title: Publish your course
    body: 14.0_congratulations.md
    action_id: publishIssue
  - type: respond
    with: goto-publish.md
    data:
      url: '%actions.publishIssue.data.html_url%'
